matrix:
  include:
  - os: osx
    osx_image: xcode9.2
    language: node_js
    node_js: '9'
    env:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
  - os: linux
    services: docker
    language: generic
    sudo: required

addons:
  apt:
    packages:
    - ucommon-utils

cache:
  directories:
  - node_modules
  - "$HOME/.cache/electron"
  - "$HOME/.cache/electron-builder"

before_install:
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
      export PATH="/tmp/git-lfs:$PATH"
    fi

before_script:
  - git lfs pull

script:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      docker run --rm \
        --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
        -v ${PWD}:/project \
        -v ~/.cache/electron:/root/.cache/electron \
        -v ~/.cache/electron-builder:/root/.cache/electron-builder \
        electronuserland/builder:wine \
        /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
    else
      yarn release
    fi

after_script:
  - ls dist
  - |
    if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      find dist -type f -maxdepth 1 -print0  | xargs -0 shasum -a 256
    else
      sha256sum dist/*
    fi
before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

# On linux create a tar gz file
before_deploy:
  - |
    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
      sudo tar -cvzf ./dist/linux-unpacked-$TRAVIS_TAG.tar.gz ./dist/linux-unpacked/*
    fi

deploy:
  - provider: releases
    overwrite: true
    tag_name: $TRAVIS_TAG
    name: $TRAVIS_TAG
    api_key:
      secure: fuXvloxR1qV4Xj8PecoF8gmQHCPukRF3nR7+szuHsoumUusyko0N5QbItdIfYTwpV9pIGwujV5mB0Ya/CKQzILkdlXo+cJzpCvFGJ1Q9wKk9hwLnouOiyF3wsagia8dpX4iLzVEATu4+LM3jol+KlXLGl8OxkGIy5Vifbd5GTbEiSrTxT9cF48/0ubgf/9rjjJyo5exuE30pRLs+m9cqnCSwgwcH6368OfYOlbRSgtGtzR9eEoGlqiNk2UHGmZUwy8dqOhid+meM7IGXwPjua8hrp1/nc/k8+UcwQxxly8xjp8bib6ier+2GbfbwxHiPWUtKFHoNzJlGWfj6xahz6fPL412HGeWVCrbVJcI3bTb/Ed1EjsjQyr4rUwvFnGitzRQAYqg/s2tpl4mVFPYyLgVMnlqiGNMkAaGfqYgErwdCkaYTtWGmLdIUkDsPMCSc4hOlajWNlb2n/ArYHOCmD+KC1KJ8hsJTxXQWD9Tfv5JBKd8g+63YIS+YEifUsxa9W4UhtODsPwBBcot/m4EH1FJS7wsticqB7rbkVq2iiMLWWMOImX47FSBqFG/0ioeWFayLIuDz+Ulvska/Nz4+R0tCQc4t1l1FDT56WI54H4KE2oYIQ8Y3U304mS6URhVRN+561HwzxVJA4halN30H4aOQjhjm5LW1e4PcSRiRalo=
    file_glob: true
    file:
      - dist/BunqDesktop Setup *.exe
      - dist/BunqDesktop-*.dmg
      - dist/bunqdesktop_*_amd64.deb
      - dist/bunqdesktop_*_i386.deb
      - dist/bunqdesktop_*_amd64.snap
      - dist/bunqdesktop-*-x86_64.AppImage
      - dist/bunqdesktop-*-i386.AppImage
      - dist/linux-unpacked-*.tar.gz
    draft: true
    skip_cleanup: true
    on:
      tags: true
  - provider: script
    script: docker run -v $(pwd):$(pwd) -w $(pwd) snapcore/snapcraft sh -c "apt update && snapcraft push dist/bunqdesktop_*_amd64.snap --release edge"
    skip_cleanup: true
    on:
      condition: $TRAVIS_OS_NAME == 'linux'
      branch: master
      tags: true

after_success:
  - openssl aes-256-cbc -K $encrypted_6a955bf10c5f_key -iv $encrypted_6a955bf10c5f_iv -in .snapcraft/travis_snapcraft.cfg -out .snapcraft/snapcraft.cfg -d
